<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnOrdenadosNoDuplicados.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAB
        ugAAAboB6KsBBgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAV6SURBVHhe7Zt7
        UFRVHMcdWhZBdkVQGnBlgQjlkTNFmkJY+ECEdJCHPMKlJWCsSKTUVKaBEidncGLYAaKHITbZFAs00uRG
        8hDER8lEKpmjzlRYjv3X+AfT89f5Hbzb3rsHuNvA9S57d+YzA7/fvb97vt97ztlzz86dBQBMyCeG0EW4
        Q8CAM4Jt7yWsYGlE2MEx8X8SQKVyB6853jAH8dYQtE6Dyl39D2og/EWIZWplBsfuPCyOiIa0bANsySuA
        7MIdkFO806nYUrADomNiURAywNTKDJKug3eeE59lKGZewBnIKiwDtdoDe8Iowc1OqzBAgySM3R7FUwPy
        tzGLOwtaH18Uhcy20yoM0KBiwPgGZBe9DMtXrQf9A0vAP2CRLAgibVn2+DraNlvhHFNmAF4gMCiUKyY7
        7l8YxDRhygzAO485H+J66t5qeO6IBbZ/fAp2dgzeU3Krm8A/dDFtW0zcmukzALs95lD8nhMXKfu/ugUH
        Bn+95xhqP6Rt0wWHTZ8BON4wh3cexe+1XGI2hsPY0ALF73/GzIlhW7MF8k0fMXNC9nRepm3z8w+QjwGe
        Wh/wXahn5sSA3drdYzYzJ0SWBqjUHqDx82fmxDAvcOx6rJwQWRoQb3gBEkvKmTkxbCirhNicYmZOiOwM
        ePPMj9Da1gfmtn44dG6El8t4rY5OWtz/OFdsfrWGd0z1+Ztgbu+nNWoGfuDlWMjOgAv1R+Hv0jJK/3st
        vJyndh6tE7U6BZYmpdG/1Z5eUHXhtvWYnqZ26/lDpibe+SxkZ0Bj9xUqvO+wGer6rvFyBQ1mOj/cbRTc
        564Gg+kY7xhT/w1ybiucJjXe6Rrm5VjIcg6YiFcsFyHj9XpIrzTB7s+/YR7jCJIY4PILIZdfCrv8wxCC
        F3DZx2FnRTFALkMAuyqeO15XfeyJJNCHTV53UUg4pJFlNp4T9fAK59sRwhrCxuqCH2Qey0KlcoOO5s1w
        /Uwh6HVaa1yyHaHAgAAo31cOHzQfhfbWNug+2SUKU60JQkJCaI3lqxKtDVyZkExjwTpvaHwjDs4f3wRD
        llS41pvB5PZgLvxx/RnKne+2wif1CRAR5kNrSLIjhOI7LV9Qhi9dhqtXvhfNW/UNtAZ2Y66BoeHRNFa3
        fyX88nUOZfRqvlWkGD59dy2tIcmOEN55FH+y80s7gad6einCOMdA/2law3bJGqALprG+lhQq/haBJXIi
        fjqbZVeXQ1ID9Ho9RRjnmPEGaDQaijDOMSMNwC6Pdx2F370Q/RtjwuHgiAEj57IgPHQuzNWoeYQGEYN7
        0hUDZGOALSgcEcY5lElwphuAXV7Y7W1xagNcfiEkl6WwEMmWwnJ5GBoP2e8ITdXjsBBlR2gSFAOkGgLY
        FTONpfQYnNlZeaceAniBiSZBN3cVPFW7C9IOV4DK87+fvoQ47STIfQ16zZ8LS43JEF9phLU1JbDxyD5K
        urkKsk8comS0HbDGOeLKDaDRLaA1WF+Deq0WGlavgbNZ2TCUtxVuGJ8VhTllI0T6+tEakuwIofhEUykl
        8/hBq2gxxFcYaQ3WQsj0ZAKMFBZRfn+x1PrrsBg6NqXSGpLsCOGdR/Hr68qYIici9VgFrcFaCvdkZFLx
        NwkskRPxc1GxXV0OSQxIfnsXROWug/TWKtr9o59OhA2NZN6wEY84YsBoyXbY/egyMERE8njpkRj47fkS
        eRnwkCGJ5uZHBsOCqLHlLppgKx5xxIBhQz6Nsxgg84SsDMC7zglH/JboacxWPOLoEEATutMzeXybZ+CJ
        RxQDlCGgTIJ2dTkkMUAsjg4BsUhigMsvhCZbCk+G0y+FJ3sYEouyI8RoJKLsCE0TigH/wwCXf3HS5V+d
        de2XpxHycYHX52HWv7a9tQWjcR0cAAAAAElFTkSuQmCC
</value>
  </data>
</root>