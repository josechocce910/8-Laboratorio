<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnLongitudOrdenadas.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>