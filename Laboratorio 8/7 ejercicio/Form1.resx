<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnEncontrarAnagramas.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>